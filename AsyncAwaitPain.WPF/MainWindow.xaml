<Window x:Class="AsyncAwaitPain.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AsyncAwaitPain.WPF"
        mc:Ignorable="d"
        Title="MainWindow" Height="400" Width="525"
        x:Name="mainWindow">
    <Window.Resources>

    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto "></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>

        <local:Intro Grid.Column="0"></local:Intro>
        <local:DeadlockView Grid.Column="1"></local:DeadlockView>
        <local:ExceptionView Grid.Column="2"></local:ExceptionView>
        <local:AsyncConstructorView Grid.Row="1"></local:AsyncConstructorView>
        <local:AsyncEventView Grid.Row="1" Grid.Column="1"></local:AsyncEventView>
        <StackPanel Grid.Column="2" Grid.Row="1">
            <Button x:Name="Collect" Click="Collect_Click">GC Collect</Button>
            <TextBlock>
                <Run>Thread Count</Run>
                <Run Text="{Binding Path=ThreadCount, ElementName=mainWindow}"></Run>
            </TextBlock>

            <TextBlock>Unhandled Task Exception</TextBlock>
            <RadioButton x:Name="TaskEventEnabled"  Checked="TaskEventEnabled_Checked" IsChecked="False" >Enable</RadioButton>
            <RadioButton x:Name="TaskEventDisable" Checked="TaskEventDisable_Checked" IsChecked="True">Disable</RadioButton>
        </StackPanel>
    </Grid>

</Window>
